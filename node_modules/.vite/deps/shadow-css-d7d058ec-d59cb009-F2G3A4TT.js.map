{
  "version": 3,
  "sources": ["../../@ionic/pwa-elements/dist/esm-es5/shadow-css-d7d058ec-d59cb009.js"],
  "sourcesContent": ["var __spreadArrays = (this && this.__spreadArrays) || function () {\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n            r[k] = a[j];\n    return r;\n};\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n *\n * This file is a port of shadowCSS from webcomponents.js to TypeScript.\n * https://github.com/webcomponents/webcomponentsjs/blob/4efecd7e0e/src/ShadowCSS/ShadowCSS.js\n * https://github.com/angular/angular/blob/master/packages/compiler/src/shadow_css.ts\n */\nvar safeSelector = function (selector) {\n    var placeholders = [];\n    var index = 0;\n    var content;\n    // Replaces attribute selectors with placeholders.\n    // The WS in [attr=\"va lue\"] would otherwise be interpreted as a selector separator.\n    selector = selector.replace(/(\\[[^\\]]*\\])/g, function (_, keep) {\n        var replaceBy = \"__ph-\" + index + \"__\";\n        placeholders.push(keep);\n        index++;\n        return replaceBy;\n    });\n    // Replaces the expression in `:nth-child(2n + 1)` with a placeholder.\n    // WS and \"+\" would otherwise be interpreted as selector separators.\n    content = selector.replace(/(:nth-[-\\w]+)(\\([^)]+\\))/g, function (_, pseudo, exp) {\n        var replaceBy = \"__ph-\" + index + \"__\";\n        placeholders.push(exp);\n        index++;\n        return pseudo + replaceBy;\n    });\n    var ss = {\n        content: content,\n        placeholders: placeholders,\n    };\n    return ss;\n};\nvar restoreSafeSelector = function (placeholders, content) {\n    return content.replace(/__ph-(\\d+)__/g, function (_, index) { return placeholders[+index]; });\n};\nvar _polyfillHost = '-shadowcsshost';\nvar _polyfillSlotted = '-shadowcssslotted';\n// note: :host-context pre-processed to -shadowcsshostcontext.\nvar _polyfillHostContext = '-shadowcsscontext';\nvar _parenSuffix = ')(?:\\\\((' +\n    '(?:\\\\([^)(]*\\\\)|[^)(]*)+?' +\n    ')\\\\))?([^,{]*)';\nvar _cssColonHostRe = new RegExp('(' + _polyfillHost + _parenSuffix, 'gim');\nvar _cssColonHostContextRe = new RegExp('(' + _polyfillHostContext + _parenSuffix, 'gim');\nvar _cssColonSlottedRe = new RegExp('(' + _polyfillSlotted + _parenSuffix, 'gim');\nvar _polyfillHostNoCombinator = _polyfillHost + '-no-combinator';\nvar _polyfillHostNoCombinatorRe = /-shadowcsshost-no-combinator([^\\s]*)/;\nvar _shadowDOMSelectorsRe = [\n    /::shadow/g,\n    /::content/g\n];\nvar _selectorReSuffix = '([>\\\\s~+\\[.,{:][\\\\s\\\\S]*)?$';\nvar _polyfillHostRe = /-shadowcsshost/gim;\nvar _colonHostRe = /:host/gim;\nvar _colonSlottedRe = /::slotted/gim;\nvar _colonHostContextRe = /:host-context/gim;\nvar _commentRe = /\\/\\*\\s*[\\s\\S]*?\\*\\//g;\nvar stripComments = function (input) {\n    return input.replace(_commentRe, '');\n};\nvar _commentWithHashRe = /\\/\\*\\s*#\\s*source(Mapping)?URL=[\\s\\S]+?\\*\\//g;\nvar extractCommentsWithHash = function (input) {\n    return input.match(_commentWithHashRe) || [];\n};\nvar _ruleRe = /(\\s*)([^;\\{\\}]+?)(\\s*)((?:{%BLOCK%}?\\s*;?)|(?:\\s*;))/g;\nvar _curlyRe = /([{}])/g;\nvar OPEN_CURLY = '{';\nvar CLOSE_CURLY = '}';\nvar BLOCK_PLACEHOLDER = '%BLOCK%';\nvar processRules = function (input, ruleCallback) {\n    var inputWithEscapedBlocks = escapeBlocks(input);\n    var nextBlockIndex = 0;\n    return inputWithEscapedBlocks.escapedString.replace(_ruleRe, function () {\n        var m = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            m[_i] = arguments[_i];\n        }\n        var selector = m[2];\n        var content = '';\n        var suffix = m[4];\n        var contentPrefix = '';\n        if (suffix && suffix.startsWith('{' + BLOCK_PLACEHOLDER)) {\n            content = inputWithEscapedBlocks.blocks[nextBlockIndex++];\n            suffix = suffix.substring(BLOCK_PLACEHOLDER.length + 1);\n            contentPrefix = '{';\n        }\n        var cssRule = {\n            selector: selector,\n            content: content\n        };\n        var rule = ruleCallback(cssRule);\n        return \"\" + m[1] + rule.selector + m[3] + contentPrefix + rule.content + suffix;\n    });\n};\nvar escapeBlocks = function (input) {\n    var inputParts = input.split(_curlyRe);\n    var resultParts = [];\n    var escapedBlocks = [];\n    var bracketCount = 0;\n    var currentBlockParts = [];\n    for (var partIndex = 0; partIndex < inputParts.length; partIndex++) {\n        var part = inputParts[partIndex];\n        if (part === CLOSE_CURLY) {\n            bracketCount--;\n        }\n        if (bracketCount > 0) {\n            currentBlockParts.push(part);\n        }\n        else {\n            if (currentBlockParts.length > 0) {\n                escapedBlocks.push(currentBlockParts.join(''));\n                resultParts.push(BLOCK_PLACEHOLDER);\n                currentBlockParts = [];\n            }\n            resultParts.push(part);\n        }\n        if (part === OPEN_CURLY) {\n            bracketCount++;\n        }\n    }\n    if (currentBlockParts.length > 0) {\n        escapedBlocks.push(currentBlockParts.join(''));\n        resultParts.push(BLOCK_PLACEHOLDER);\n    }\n    var strEscapedBlocks = {\n        escapedString: resultParts.join(''),\n        blocks: escapedBlocks\n    };\n    return strEscapedBlocks;\n};\nvar insertPolyfillHostInCssText = function (selector) {\n    selector = selector\n        .replace(_colonHostContextRe, _polyfillHostContext)\n        .replace(_colonHostRe, _polyfillHost)\n        .replace(_colonSlottedRe, _polyfillSlotted);\n    return selector;\n};\nvar convertColonRule = function (cssText, regExp, partReplacer) {\n    // m[1] = :host(-context), m[2] = contents of (), m[3] rest of rule\n    return cssText.replace(regExp, function () {\n        var m = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            m[_i] = arguments[_i];\n        }\n        if (m[2]) {\n            var parts = m[2].split(',');\n            var r = [];\n            for (var i = 0; i < parts.length; i++) {\n                var p = parts[i].trim();\n                if (!p)\n                    break;\n                r.push(partReplacer(_polyfillHostNoCombinator, p, m[3]));\n            }\n            return r.join(',');\n        }\n        else {\n            return _polyfillHostNoCombinator + m[3];\n        }\n    });\n};\nvar colonHostPartReplacer = function (host, part, suffix) {\n    return host + part.replace(_polyfillHost, '') + suffix;\n};\nvar convertColonHost = function (cssText) {\n    return convertColonRule(cssText, _cssColonHostRe, colonHostPartReplacer);\n};\nvar colonHostContextPartReplacer = function (host, part, suffix) {\n    if (part.indexOf(_polyfillHost) > -1) {\n        return colonHostPartReplacer(host, part, suffix);\n    }\n    else {\n        return host + part + suffix + ', ' + part + ' ' + host + suffix;\n    }\n};\nvar convertColonSlotted = function (cssText, slotScopeId) {\n    var slotClass = '.' + slotScopeId + ' > ';\n    var selectors = [];\n    cssText = cssText.replace(_cssColonSlottedRe, function () {\n        var m = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            m[_i] = arguments[_i];\n        }\n        if (m[2]) {\n            var compound = m[2].trim();\n            var suffix = m[3];\n            var slottedSelector = slotClass + compound + suffix;\n            var prefixSelector = '';\n            for (var i = m[4] - 1; i >= 0; i--) {\n                var char = m[5][i];\n                if (char === '}' || char === ',') {\n                    break;\n                }\n                prefixSelector = char + prefixSelector;\n            }\n            var orgSelector = prefixSelector + slottedSelector;\n            var addedSelector = \"\" + prefixSelector.trimRight() + slottedSelector.trim();\n            if (orgSelector.trim() !== addedSelector.trim()) {\n                var updatedSelector = addedSelector + \", \" + orgSelector;\n                selectors.push({\n                    orgSelector: orgSelector,\n                    updatedSelector: updatedSelector,\n                });\n            }\n            return slottedSelector;\n        }\n        else {\n            return _polyfillHostNoCombinator + m[3];\n        }\n    });\n    return {\n        selectors: selectors,\n        cssText: cssText\n    };\n};\nvar convertColonHostContext = function (cssText) {\n    return convertColonRule(cssText, _cssColonHostContextRe, colonHostContextPartReplacer);\n};\nvar convertShadowDOMSelectors = function (cssText) {\n    return _shadowDOMSelectorsRe.reduce(function (result, pattern) { return result.replace(pattern, ' '); }, cssText);\n};\nvar makeScopeMatcher = function (scopeSelector) {\n    var lre = /\\[/g;\n    var rre = /\\]/g;\n    scopeSelector = scopeSelector.replace(lre, '\\\\[').replace(rre, '\\\\]');\n    return new RegExp('^(' + scopeSelector + ')' + _selectorReSuffix, 'm');\n};\nvar selectorNeedsScoping = function (selector, scopeSelector) {\n    var re = makeScopeMatcher(scopeSelector);\n    return !re.test(selector);\n};\nvar applySimpleSelectorScope = function (selector, scopeSelector, hostSelector) {\n    // In Android browser, the lastIndex is not reset when the regex is used in String.replace()\n    _polyfillHostRe.lastIndex = 0;\n    if (_polyfillHostRe.test(selector)) {\n        var replaceBy_1 = \".\" + hostSelector;\n        return selector\n            .replace(_polyfillHostNoCombinatorRe, function (_, selector) {\n            return selector.replace(/([^:]*)(:*)(.*)/, function (_, before, colon, after) {\n                return before + replaceBy_1 + colon + after;\n            });\n        })\n            .replace(_polyfillHostRe, replaceBy_1 + ' ');\n    }\n    return scopeSelector + ' ' + selector;\n};\nvar applyStrictSelectorScope = function (selector, scopeSelector, hostSelector) {\n    var isRe = /\\[is=([^\\]]*)\\]/g;\n    scopeSelector = scopeSelector.replace(isRe, function (_) {\n        var parts = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            parts[_i - 1] = arguments[_i];\n        }\n        return parts[0];\n    });\n    var className = '.' + scopeSelector;\n    var _scopeSelectorPart = function (p) {\n        var scopedP = p.trim();\n        if (!scopedP) {\n            return '';\n        }\n        if (p.indexOf(_polyfillHostNoCombinator) > -1) {\n            scopedP = applySimpleSelectorScope(p, scopeSelector, hostSelector);\n        }\n        else {\n            // remove :host since it should be unnecessary\n            var t = p.replace(_polyfillHostRe, '');\n            if (t.length > 0) {\n                var matches = t.match(/([^:]*)(:*)(.*)/);\n                if (matches) {\n                    scopedP = matches[1] + className + matches[2] + matches[3];\n                }\n            }\n        }\n        return scopedP;\n    };\n    var safeContent = safeSelector(selector);\n    selector = safeContent.content;\n    var scopedSelector = '';\n    var startIndex = 0;\n    var res;\n    var sep = /( |>|\\+|~(?!=))\\s*/g;\n    // If a selector appears before :host it should not be shimmed as it\n    // matches on ancestor elements and not on elements in the host's shadow\n    // `:host-context(div)` is transformed to\n    // `-shadowcsshost-no-combinatordiv, div -shadowcsshost-no-combinator`\n    // the `div` is not part of the component in the 2nd selectors and should not be scoped.\n    // Historically `component-tag:host` was matching the component so we also want to preserve\n    // this behavior to avoid breaking legacy apps (it should not match).\n    // The behavior should be:\n    // - `tag:host` -> `tag[h]` (this is to avoid breaking legacy apps, should not match anything)\n    // - `tag :host` -> `tag [h]` (`tag` is not scoped because it's considered part of a\n    //   `:host-context(tag)`)\n    var hasHost = selector.indexOf(_polyfillHostNoCombinator) > -1;\n    // Only scope parts after the first `-shadowcsshost-no-combinator` when it is present\n    var shouldScope = !hasHost;\n    while ((res = sep.exec(selector)) !== null) {\n        var separator = res[1];\n        var part_1 = selector.slice(startIndex, res.index).trim();\n        shouldScope = shouldScope || part_1.indexOf(_polyfillHostNoCombinator) > -1;\n        var scopedPart = shouldScope ? _scopeSelectorPart(part_1) : part_1;\n        scopedSelector += scopedPart + \" \" + separator + \" \";\n        startIndex = sep.lastIndex;\n    }\n    var part = selector.substring(startIndex);\n    shouldScope = shouldScope || part.indexOf(_polyfillHostNoCombinator) > -1;\n    scopedSelector += shouldScope ? _scopeSelectorPart(part) : part;\n    // replace the placeholders with their original values\n    return restoreSafeSelector(safeContent.placeholders, scopedSelector);\n};\nvar scopeSelector = function (selector, scopeSelectorText, hostSelector, slotSelector) {\n    return selector.split(',')\n        .map(function (shallowPart) {\n        if (slotSelector && shallowPart.indexOf('.' + slotSelector) > -1) {\n            return shallowPart.trim();\n        }\n        if (selectorNeedsScoping(shallowPart, scopeSelectorText)) {\n            return applyStrictSelectorScope(shallowPart, scopeSelectorText, hostSelector).trim();\n        }\n        else {\n            return shallowPart.trim();\n        }\n    })\n        .join(', ');\n};\nvar scopeSelectors = function (cssText, scopeSelectorText, hostSelector, slotSelector, commentOriginalSelector) {\n    return processRules(cssText, function (rule) {\n        var selector = rule.selector;\n        var content = rule.content;\n        if (rule.selector[0] !== '@') {\n            selector = scopeSelector(rule.selector, scopeSelectorText, hostSelector, slotSelector);\n        }\n        else if (rule.selector.startsWith('@media') || rule.selector.startsWith('@supports') ||\n            rule.selector.startsWith('@page') || rule.selector.startsWith('@document')) {\n            content = scopeSelectors(rule.content, scopeSelectorText, hostSelector, slotSelector);\n        }\n        var cssRule = {\n            selector: selector.replace(/\\s{2,}/g, ' ').trim(),\n            content: content\n        };\n        return cssRule;\n    });\n};\nvar scopeCssText = function (cssText, scopeId, hostScopeId, slotScopeId, commentOriginalSelector) {\n    cssText = insertPolyfillHostInCssText(cssText);\n    cssText = convertColonHost(cssText);\n    cssText = convertColonHostContext(cssText);\n    var slotted = convertColonSlotted(cssText, slotScopeId);\n    cssText = slotted.cssText;\n    cssText = convertShadowDOMSelectors(cssText);\n    if (scopeId) {\n        cssText = scopeSelectors(cssText, scopeId, hostScopeId, slotScopeId);\n    }\n    cssText = cssText.replace(/-shadowcsshost-no-combinator/g, \".\" + hostScopeId);\n    cssText = cssText.replace(/>\\s*\\*\\s+([^{, ]+)/gm, ' $1 ');\n    return {\n        cssText: cssText.trim(),\n        slottedSelectors: slotted.selectors,\n    };\n};\nvar scopeCss = function (cssText, scopeId, commentOriginalSelector) {\n    var hostScopeId = scopeId + '-h';\n    var slotScopeId = scopeId + '-s';\n    var commentsWithHash = extractCommentsWithHash(cssText);\n    cssText = stripComments(cssText);\n    var orgSelectors = [];\n    if (commentOriginalSelector) {\n        var processCommentedSelector_1 = function (rule) {\n            var placeholder = \"/*!@___\" + orgSelectors.length + \"___*/\";\n            var comment = \"/*!@\" + rule.selector + \"*/\";\n            orgSelectors.push({ placeholder: placeholder, comment: comment });\n            rule.selector = placeholder + rule.selector;\n            return rule;\n        };\n        cssText = processRules(cssText, function (rule) {\n            if (rule.selector[0] !== '@') {\n                return processCommentedSelector_1(rule);\n            }\n            else if (rule.selector.startsWith('@media') || rule.selector.startsWith('@supports') ||\n                rule.selector.startsWith('@page') || rule.selector.startsWith('@document')) {\n                rule.content = processRules(rule.content, processCommentedSelector_1);\n                return rule;\n            }\n            return rule;\n        });\n    }\n    var scoped = scopeCssText(cssText, scopeId, hostScopeId, slotScopeId);\n    cssText = __spreadArrays([scoped.cssText], commentsWithHash).join('\\n');\n    if (commentOriginalSelector) {\n        orgSelectors.forEach(function (_a) {\n            var placeholder = _a.placeholder, comment = _a.comment;\n            cssText = cssText.replace(placeholder, comment);\n        });\n    }\n    scoped.slottedSelectors.forEach(function (slottedSelector) {\n        cssText = cssText.replace(slottedSelector.orgSelector, slottedSelector.updatedSelector);\n    });\n    return cssText;\n};\nexport { scopeCss };\n"],
  "mappings": "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",
  "names": ["scopeSelector", "selector", "_"]
}
